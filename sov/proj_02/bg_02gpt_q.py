"""
Прежде чем группировать данные необходимо произвести трансформацию
датафрейма таким образом чтоб столбцы были однозначно пригодны для группирования
Исходные экспериментальные  данные находятся в датафрейме df1 со столбцами:
df1 = df.rename(columns={'Treatment':'TR','Treatment_code':'code','Day':'D','Fv/Fm':'TF'})
трансформированный датафрейм Tdt  имеет столбцы 
 Source
 Factor
 Day
 Val

 Source будет иметь значения   -  U0, U1, U2, C0
 Factor                        -  N, F, H
 Day                           -  7, 10, 14
 Val ( значение из соответствующего  столбца датафрейма df1['TF'])  

 функция Transform (code) перебирает все элементы df1[code] и возвращает кортеж (s1, f1, d1, v1) содержащий
 значения  для подстановки в столбцы  трансформированного датафрейма Source,  Factor,  Day,  Val

 Можешь набросать каркас кода?
 """
 # -----------------------------------------------------------------------
import pandas as pd

# Предполагается, что у вас уже есть DataFrame df1 с данными
# Возможно, вам придется внести некоторые изменения в этот код в зависимости от ваших конкретных данных

# Функция для трансформации значений
def transform(code):
    # Напишите здесь свою логику для трансформации значения code в кортеж (source, factor, day, val)
    # Например:
    s1 = code[0]  # Первая буква в коде как источник (U0, U1, U2, C0)
    f1 = code[1]  # Вторая буква в коде как фактор (N, F, H)
    d1 = code[2:]  # Оставшиеся цифры в коде как день (7, 10, 14)
    v1 = df1.loc[df1['code'] == code, 'TF'].values[0]  # Значение из столбца 'TF' для данного кода
    return s1, f1, d1, v1

# Применяем функцию transform к столбцу 'code' и создаем новые столбцы 'Source', 'Factor', 'Day', 'Val'
df1[['Source', 'Factor', 'Day', 'Val']] = pd.DataFrame(df1['code'].apply(transform).tolist(), index=df1.index)

# Теперь ваш DataFrame df1 преобразован в требуемый формат
