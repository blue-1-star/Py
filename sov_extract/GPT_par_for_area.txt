Функция
def calculate_brightness_with_area(image_path, shape='square', size=100, lower_threshold=0, upper_threshold=255)
выделяет область изображения для вычисления средних значений яркости 

В контексте обработки каталога с изображениями хотелось бы передавать в эту функцию параметры size, shape,
lower_threshold, upper_threshold для каждого обрабатываемого файла. Получается список кортежей 
(image_path, shape, size,  lower_threshold, upper_threshold) 
Должна быть функция формирующая этот список кортежей - по умолчанию прямоугольник по центру с размером 
width, height = scale * size( image_path) - т.е размер исходного изображения по длине, высоте умноженный на коэффициент,
lower_threshold=0, upper_threshold=255

2025-01-30 15:24:56
Функция
def calculate_brightness_with_area(image_path, shape='square', size=100, lower_threshold=0, upper_threshold=255)
выделяет область изображения для вычисления средних значений яркости 
нужно сделать функцию которая накладывает контур выделенной вышеозначенной функцией области на исходное изображение и сохраняет в файл 
png с именем {Filename}_imp и затем помещает весь набор начерченных файлов  в  пдф 


2025-01-30 19:48:25
Я поспешил с предыдущим сообщением
после отработки process_image() уже имеется объект
img = process_image(img_path)  и навернеое  return Image.fromarray(image) уже излишне
в функции draw_brightness_area ? 



2025-01-31 12:07:49
Поскольку функция def crop_image_x(image, shape='square', size=(100, 100))
работает в связке, в паре с draw_brightness_area(image, shape='square', size=100)
было бы правильным объединить их, сделав необходимые модификации. 

Необходимо скорректировать функцию 
def crop_image_x(image, shape='square', size=(100, 100)):
    """
    Вырезает заданную область (прямоугольник или эллипс) из изображения.
    """
    width, height = image.size
    center_x, center_y = width // 2, height // 2
    size_x, size_y = size

    if shape == 'square':  # Теперь обрабатывает прямоугольник
        left = max(center_x - size_x // 2, 0)
        upper = max(center_y - size_y // 2, 0)
        right = min(center_x + size_x // 2, width)
        lower = min(center_y + size_y // 2, height)
        return image.crop((left, upper, right, lower))

    elif shape == 'circle':  # Теперь обрабатывает эллипс
        mask = Image.new("L", image.size, 0)
        draw = ImageDraw.Draw(mask)
        draw.ellipse(
            (center_x - size_x // 2, center_y - size_y // 2,
             center_x + size_x // 2, center_y + size_y // 2),
            fill=255
        )
        result = Image.composite(image, Image.new("RGB", image.size, (0, 0, 0)), mask)

        bbox = mask.getbbox()
        return result.crop(bbox)

в таких направлениях:
1) Добавить в нее новую функцию - аналог или модификацию  
def draw_brightness_area(image, shape='square', size=100):
    """
    Накладывает контур выделенной области на изображение.
    Возвращает обработанное изображение.
    """
1а) в   crop_image_x  произвести модификацию: 
     shape='square'  ( circle) - заменить на rectangle, ellipse

которая вызывается  в теле  crop_image_x 
решает свою задачу формирования и нанесения контура на исходное изображение
2) создать функция записи необходимых  ( используемых) параметров - 
 а именно - фигура ( rectangle or ellipse ), координаты центра фигуры,  size,   в  метаданные сформированного файла с контурами 
3) сохраняет созданный рисунок в файл по адресу 
f"{image_dir}\contour" - подкаталог contour каталога image_dir 

2025-01-31 17:46:24
функция  
def draw_brightness_area(image, shape, center, size):  
вызывается внутри 

2025-02-01 00:02:35

у меня затирается файл с контуром прямоугольника потому что идет запись в файл одного и того же имени
сначала контора прямоугольника а затем в этот же файл контура эллипса. 
фторая запись затирает первую

draw_brightness_area(image_with_contour, shape, (center_x, center_y), size)
    
       contour_path = os.path.join(contour_dir, f"{filename}_imp.png")

Что ты можешь предложить? 



2025-02-11 13:15:33 

в чашке Петри исследуется антигрибковая активность вещества
если вписать в круг чашки прямоугольник и его разделить на квадраты 
3х5  - всего помещено 15 квадратов - это поле исследования
левый 0-й столбец - капля воды
1й столбец - 0.25%  раствор вещества
2й столбец - 0.5%  раствор вещества
3й столбец - 0.75%  раствор вещества
4й столбец - 1%  раствор вещества

на фото видны черные точки - грибок, на белом фоне
чернгые области - это места концентрации грибка, 
белые - где его нет
Необходимо определить антигрибковую эффективность воздествия вещества 

Первый - общий вопрос
Насколько адекватно может отражать концентрацию грибка простой подсчет средней яркости? 

Если неадекватно - какой метод можешь предложить? 





Подсчёт средней яркости может быть грубым, но потенциально рабочим методом, если грибок действительно отображается
 как тёмные области, а фон остаётся стабильным. Однако есть несколько проблем:

Неоднородность распределения грибка – Средняя яркость может сглаживать локальные концентрации, теряя важные детали.
Освещение и шум – Если изображение неравномерно освещено, это может повлиять на яркость.
Граница между грибком и чистыми зонами – Если есть градиенты серого, это может исказить результаты.
Альтернативные методы:
Пороговая сегментация – Можно выделить грибковые зоны по контрасту и считать процент затемнённой области.
Например, метод   (Otsu’s thresholding).
Анализ текстуры – Использование гистограмм градиентов (HOG) или фильтров Габора для выделения структуры грибка.
Машинное обучение – Обучение нейросети (например, U-Net) для сегментации грибковых колоний.
Фрактальный анализ – Измерение сложности границ пятен грибка (если форма колоний важна).
Какой метод тебе больше подходит? Нужно ли написать код для анализа?

давай попробуем метод 1  Оцу

Давай рассмотрим на круге чашки Петри описанный квадрат со сторонами 10х10 см.
в круг - чашка Петри - висаны 3 ряда по 5 столбцов в каждом - квадраты, в которых помещалась капля вещества
исследуемого на противогрибковую эфеективность. 
Левый стролбец - (1,1), (2, 1), (3,1 ) - вода
следущие за ним все столбцы (1,2) ... (1,5), (2,2), ..., (2,5)   ... имеют разные растворы

первым шагом рассмотрим две фигуры 
квадраты что с водой - прямоугольник 1  ( содержит  три квадарата) 
квадраты что с веществом - прямоугольник 2 ( содержит 12 квадратов) 

определить параметры для оценки противогрибкового действия вещества и воды. 

Дип сик
Давай будем брать не весь фотоснимок для изучения противогрибковой активности а рассмотрим 
каждый из 15 квадратов ( в центре которого находилась капля с веществом разной концентрации или водой)

Для этого нужна функция выделения каждого квадрата  из общего фото 
и затем в цикле по всем выделенным квадратам ( ячейкам) произвести вычисления 

каталог с фото чашки Петри
"G:\My\sov\extract\ORF\spori\FL_1.jpg"
результаты для каждого входного файла размещать в подкаталоге в виде изображения ( картинки )
fungal -  выделенная область на общей картинке 
имя выходного файла формировать : {input_file}_{номер ячейки от 1 до 15}.jpg
и числовые данные в Excel - файл первый столбец  Substance, далее столбцы характеризующие параметры 
антигрибкововй эффективности 



2025-02-11 21:26:29

Давай будем брать не два прямоугольника ( с водой и веществом)  для изучения противогрибковой активности а рассмотрим 
каждый из 15 квадратов, ячеек ( в центре которого находится капля с веществом разной концентрации или водой)
потом можно cгруппировать эти ячейки по различным признакам - вода- вещество и т.д.

Обращаю внимание, что ячейки 3Х5 = 15   - размещаются во вписаном в круг чашки Петри прямоугольнике, с центром, совпадающим 
с центром круга
тебе нужно предусмотреть вычисление размера стороны этих ячеек с учетом того что диаметр чашки Петри 10 см, 
имеется 4 общие точки прямоугольника и окружности, поскольку у нас прямоугольник вписан в эту окружность Петри, по оси 
X размещено 5 ячеек - квадратов, Y - 3 


Нужна функция выделения контурами каждого квадрата ( ячейки) на  общем фото, чтобы иметь
возможность контролировать попадание контуров ячейки на исходной картине. 
затем в цикле по всем выделенным квадратам ( ячейкам) произвести вычисления и записать накопленные в датафреме 
данные в итоговый Excel - файл 

каталог с фото чашек Петри  -
"G:\My\sov\extract\ORF\spori\FL*.jpg" - содержит файлы по такому шаблону.
результаты для каждого входного файла размещать в подкаталоге с именем обрабатываемого файла FL_1, FL_2, ...
в виде изображения с контурами ячейки на фоне общей картины обрабатываемого изображения
имя выходного файла с контуром формировать : {input_file}_{номер ячейки от 1 до 15}.jpg
и числовые данные в Excel:   File - имя обрабатываемого файла,
Substance - вода либо растворы вещества 0.25%, 0.5%, 0.75%, 1%
далее столбцы характеризующие параметры антигрибкововй эффективности 

2025-02-12 22:19:16

--------
Рассмотрим следующую ситуацию. Нам известен диаметр чашки Петри – 10 см, значит её радиус

𝑅
=
5
 см
.
R=5 см.
На неё накладывается прямоугольная решётка, состоящая из квадратных ячеек, организованных в 3 ряда по вертикали и 5 столбцов по горизонтали. При этом решётка располагается симметрично относительно центра окружности, то есть:

по вертикали – 3 ряда, от центра вверх и вниз по 1,5 ячейки (то есть половина высоты решётки равна 
3
𝑠
2
=
1.5
𝑠
2
3s
​
 =1.5s);
по горизонтали – 5 столбцов, от центра влево и вправо по 2,5 ячейки (то есть половина ширины решётки равна 
5
𝑠
2
=
2.5
𝑠
2
5s
​
 =2.5s).
Обозначим через 
𝑠
s длину стороны одной ячейки. Тогда вся решётка имеет размеры:

ширина: 
5
𝑠
5s,
высота: 
3
𝑠
3s.
Если мы выберем такое масштабирование, что прямоугольник, образованный решёткой, вписывается в окружность (то есть его вершины лежат на окружности), то расстояние от центра решётки (и окружности) до одной из вершин решётки должно равняться радиусу 
𝑅
R.

Рассмотрим вершину прямоугольника. Её координаты (относительно центра) будут:

(
±
5
𝑠
2
,
 
±
3
𝑠
2
)
=
(
±
2.5
𝑠
,
 
±
1.5
𝑠
)
.
(± 
2
5s
​
 ,± 
2
3s
​
 )=(±2.5s,±1.5s).
Расстояние от центра до вершины вычисляется по теореме Пифагора:

𝑑
=
(
2.5
𝑠
)
2
+
(
1.5
𝑠
)
2
=
𝑠
2.5
2
+
1.5
2
.
d= 
(2.5s) 
2
 +(1.5s) 
2
 
​
 =s 
2.5 
2
 +1.5 
2
 
​
 .
Вычислим:

2.5
2
=
6.25
,
1.5
2
=
2.25
,
6.25
+
2.25
=
8.5.
2.5 
2
 =6.25,1.5 
2
 =2.25,6.25+2.25=8.5.
Таким образом,

𝑑
=
𝑠
8.5
.
d=s 
8.5
​
 .
Чтобы решётка была максимально вписана в окружность, требуется, чтобы 
𝑑
d совпадало с радиусом 
𝑅
=
5
R=5 см:

𝑠
8.5
=
5.
s 
8.5
​
 =5.
Отсюда:

𝑠
=
5
8.5
.
s= 
8.5
​
 
5
​
 .
Можно упростить это выражение. Заметим, что

8.5
=
17
2
=
17
2
,
8.5
​
 = 
2
17
​
 
​
 = 
2
​
 
17
​
 
​
 ,
откуда:

𝑠
=
5
17
/
  
2
=
5
2
17
=
5
2
17
.
s= 
17/2
​
 
5
​
 = 
17
​
 
5 
2
​
 
​
 =5 
17
2
​
 
​
 .
Итоговый ответ
Длина стороны квадрата решётки составляет

𝑠
=
5
8.5
=
5
2
17
см
.
s= 
8.5
​
 
5
​
 =5 
17
2
​
 
​
 см.
Приблизительное числовое значение
Вычислим численно:

8.5
≈
2.915
8.5
​
 ≈2.915,
тогда 
𝑠
≈
5
2.915
≈
1.715
s≈ 
2.915
5
​
 ≈1.715 см.
Таким образом, сторона одного квадрата составляет примерно 1.71 см.


You said:
Отлично
примерно так визуально и выглядит ! 
Reasoned for a couple of seconds
Отлично! Рад, что схема оказалась полезной и соответствует вашим представлениям. Если появятся дополнительные вопросы или понадобится ещё какая-либо помощь с подобными задачами, обращайтесь!

-----------------
2025-02-12 22:43:32
Давай теперь неможко сдвинем концевые точки прямоугольника от окружности 
Они располагаются не на самой окружности а 0.5 см ближе к цетру ( т.е 
прямоугольник оказывается не вписаным а просто расположенным  внутри окружности с расстоянием
 до нее 0.5см симметрично для всех четырех точек) 

 и повторить  то же вычисление стороны квадрата

2025-02-12 22:52:58

сторона одного квадрата будет примерно 1.54 см


2025-02-12 23:04:08
Напиши функцию для определения координат каждого квадрата ( i,j)  - например левой нижней точки квадрата 
с входными параметрами - 
R - радиус чашки Петри ( по умолчанию 5 см)
n,m - размерности решетки ( по умолчанию 3 и 5 ) 
Delta - расстояние от концевых (крайних) точек  прямоугольника до окружности ( умолчанию = 0.5 см)

Систему координат наверное в центре окуружности размещаем? 
Или может лучше на диаметральной  горизонтали слева ? 
Или вообще левый нижний угол ( 1-й квадрант) исходного изображения? Тогда у нас все координаты 
будут положительными и по наростанию


2025-02-12 23:32:50
а ты знаешь по какому алгоритму ImageJ  расчитывает степень концентрации грибка на изображении? 


2025-02-13 11:38:07

правильно ли я понимаю что функция «Analyze Particles» в ImageJ не реализует никакого алгоритма Отсу
 а тут у тебя это базовый момент.
# Применяем пороговую обработку с использованием метода Отсу 

Для меня важно проверить результаты полученные применением   функции «Analyze Particles» в ImageJ с результатом,
полученным твоим кодом. Там главным результатом является процент площади под грибком 

можешь реализовать в коде подход максимально приближенный к реализованному в функции «Analyze Particles» в ImageJ 

должна быть реализована функция которая получает файл с изображением 
вычисляются координаты ячеек с использованием def get_square_coordinates(R=5, n=3, m=5, Delta=0.5):

в подцикле по всем выделенным квадратам ( ячейкам) произвести вычисления площадей занятых ггрибкоами
и записать накопленные данные в датафрейме а закетем вывести в итоговый Excel - файл 

каталог с фото чашек Петри  -
"G:\My\sov\extract\ORF\fungus"
"G:\My\sov\extract\ORF\fungus\FL_1.jpg" - файл с изображением
"G:\My\sov\extract\ORF\fungus\*.jpgFL" - содержит файлы по такому шаблону.
результаты для каждого входного файла размещать в подкаталоге с именем обрабатываемого файла FL_1, FL_2, ...
в виде файла с изображением и с контурами ячейки на фоне общей картины обрабатываемого изображения
имя выходного файла с контуром формировать : {input_file}_{номер ячейки от 1 до 15}.jpg
и числовые данные в Excel:   File - имя обрабатываемого файла,
Substance - вода либо растворы вещества 0.25%, 0.5%, 0.75%, 1%
далее столбцы характеризующие параметры антигрибкововй эффективности - как процент площади с грибками от общей площади ячейки
показать ход выполнения на уровне внешнего цикла  - обрабатывается файл FL*.jpg


2025-02-13 11:56:04
Поскольку области выделялись вручную - был избран подход  - выделялся сразу большой прямоугольник 
содержащий ячейки  3-15 ( все с веществом)  
0-2 это ячейки с водой
Эта область ( объединение 3-15 ячейки) обозначена P1 
FL_1_P1 - это прямоугольник с ячейками 3-15 в изображении FL_1

нужно обеспечить  вывод в Excel  Mean( FL_i_P1)

Кроме того «Analyze Particles» в ImageJ выводит значение Count 
Правильно ли я понимаю что это количество пикселей превзошедших порог и засчитываетсмя
как имеющий грибок?

Твои аннотированные изображения можно накладывать на исходное изображение 
вернее добавить ещё одно аннотирванное изображение в котором оно наложено на исходное 
чтобы видеть общее местоположение - и детали рассматривать уже на локальном  

И почему у тебя красный цвет а ImageJ работает с черным ? 


2025-02-13 14:16:35

В ImageJ производится вычисление площади на фото изображения, занятой грибком 
Это выполняется такими шагами:
1. загружаем файл изображения
2. на нем для калибровки лежит линейка с сантиметровыми делениями - выбираем 1 см 
   и в «Analyze-> Set Scale - устанавливаем измеренное значение - число пикселей на сантиметр 
3. Вручную выделяем изучаемую прямоугольную область 
4. Делаем кроп - отсечение лишнег
5. Именуем сделанный кроп
6. Делаем бинаризацию  Process-> Binary -> Make Binary ( получили черно - белую картинку)
7. Выполняем анализ - процент площади исследуемой области занятой грибком
    Analyze-> «Analyze Particles»  в окошке выбираем опции ( включены флажки)  для Exclude on Edges
    и Include holes  Show : Nothing
8. получаем результаты например FL_1_P1_.jpg	2768	1.379	4.982E-4	5.237	254.866
нас интересует в первую очередь искомая площадь 5.237

вопросы:
1) что происходит при выполнении шага 6 ? 
2) Какой алгоритм используется в ImageJ для подсчета грибковых пикселей? 
3) Это будет просто множество удовлетворяющих какому то критерию пикселей? 
4) Или это некая область со всеми пикселами ее составляющими? 
5) Грибок в этой картине выделен каким цветом? 

2025-02-13 17:20:05

поскольку порог - которым определяется куда мы относим пиксел к грибковым ( у меня они темные) или к светлым -
величина таки достаточно произвольная - субъективная, 
поэтому подгонку результатов обоих вычислений ImageJ  и 
ret, thresh_roi = cv2.threshold(gray_roi, 0, 255, cv2.THRESH_BINARY + cv2.THRESH_OTSU)
к какой-то согласованности можно попробовать сделать
двигая этот порог - надо чтобы питон давал меньшую площадь грибка, значит мы можем поднять порог.
Правильная ли идея? 
И каковы возможности ее реализации? 

если по умолчанию Otsu считает все пиксели с интенсивностью ниже ret как грибок (белыми после THRESH_BINARY_INV),
то снижение порога (ret – delta) заставит считать грибковыми только ещё более тёмные пиксели.

в нашем примере грибковые пиксели - темные. Инверсию мы не будем делать - ведь интуитивно и визуально грибок то черный
Взглините например под микроскопом! как то очень непривычно черное называть белым, хотя людям нравится ! 
 Правильно ли я понимаю, что в моем случае нужно сделать 
 снижение порога (ret – delta) и оно заставит считать грибковыми только ещё более тёмные пиксели - и следовательно уменьшит 
 площадь, занятую грибком? 

 2025-02-13 21:50:26

 Текущее состояние модуля по грибкам такое:

 Необходима реорганизация
 1) Убрать все, что касается обработки области P1
 2) Изменяется file_pattern = os.path.join(input_folder, "FL*.jpg") -   просто *.jpg 
 3) Добавляется новая серия образцов с альгинатом ( был только фукоидан F - ) файлы начинаются с A
 4) Добавить разбор имени файла  - если начинается с A or F - сохранять эту информацию в новом поле 
    Substance ( для различных концетраций 0.25%, 0.5%, 0.75%, 1% - предложить другое имя)
 5) извлекать число из имени файла для использования в именовании соответсвующих сегментов - областей  с грибками
 6) модифицировать функцию get_square_coordinates в таких направлениях:
    6.1 ввести параметр сдвига решетки как целого - (dx, dy) - когда визуально видно
         что сетка неправильно позиционирована  ( параметр get_square_coordinates(R=R, n=n, m=m, Delta=Delta))- 
         Delta - работает на сжатие растяжение сетки т.е изменеие размеров, а shift - будет 
         просто сдвигать
    6.2 ввиду вариаций при съемке оказывается что параметр Set Scale - в ImageJ - введен совсем не напрасно
         имеется дополнительная информация о масштабах каждого изображения - количество пикселов на сантиметр
         я предполагаю что это будет влиять на размер ячеек сетки - можешь высказать свои соображения? 

2025-02-14 11:47:50

Необходимо внести коррекцию в алгоритм заполнения столбца Concentration

значения выбираются из списка consent = [0, 0.25. 0.5, 0.75, 1  ] в соответствии с геометрией расположения ячейки 
 на решетке  ( i,j)  consent[j]  а именно столбцом. А не из имени файла 

match = re.search(r'(\d+\.?\d*)', file_name)
concentration = match.group(1) + '%' if match else 'unknown'

2025-02-14 13:36:18

необходимо обеспечить подстановку данных в коде модуля для анализа грибков.
Допустим мы увидели что в файле  A_n1 сетка сдвинута - нужно запустить модуль для этого файла 
с переданным параметром shift, а для файла   F_n2 - имеется параметр scale отличный от варианта по умолчанию
его нужно передать для обработки только этого файла 
для определенных файлов еще возможен вариант изменения Delta
который в get_square_coordinates(R=5, n=3, m=5, Delta=0.5, shift=(0,0)):

и при этом вариант работы по умолчанию должен быть первым и после изменений должен работать 
по умочанию. 


Кстати 
pixel_per_cm=None  - у тебя только в функции 
def process_file(file_path, output_root, R=5, n=3, m=5, Delta=0.5, shift=(0,0), pixel_per_cm=None):

но он же влияет и на координаты ячеек 
поэтому необходимо учеcть это и в другой функции
def get_square_coordinates(R=5, n=3, m=5, Delta=0.5, shift=(0,0)):
и переработать ее с учетом scale ( pixel_per_cm)

ты имеешь доступ ко всем указанным функциям? 

или выслать тебе текущее состояние модуля ибо правка должна быть существенная
как передавать при получении дополнительных данных эти данные для нужных файлов ? 


2025-02-14 15:02:42

визуализация данных об антигрибковом воздействии препаратов

Групиировка по столбцам SampleType, File
показать столбчиковую диаграмму значений FungusPercentage c усиками станд. отклонений
По оси X отметки  - > извлеченное из имени файла число
1) Для средних значений по имени файла - агрегирование данных по File и отсортированных по возрастанию
2) Показать неагрегированный по File результат в виде узких столбиков на 3-4 пикселя 
     для каждого значения из столбца Region объединенных в группу по File отсортированных 
     в таком же как в примере 1 порядке ( т.е по ворастанию средних в агрегации по File)


2025-02-14 16:03:51

не работает!
выводятся два столбца синего цвета и непонятно вообще ничего

Должна быть погруппа по первому значению SampleType, затем, через вертикальную черту  по второму ...
а в этой подгруппе идет уже перебор по File


current_date = datetime.now().strftime("%d_%m")
сделай вывод графиков в файл  -> f"fungal_{current_date}.jpg
графики выводятся в подкаталог output_root\graph

Оформи визуализацию в виде функции 
def visualisation


2025-02-14 19:27:01
Прошу сделать следующие коррекции:
1) в функции def main(): сохраняем объемные результаты вычислений в csv - файл 
в том же каталоге куда выводится Excel файл сохраняющие данные датафрейма, чтобы 
при наличии такого файла вычисления не проводились, а датафрейм  загружался из csv - файла 
2) добавить метки по оси X и на верхнем графике, а то нижние слишком далеко и выпадают из обзора

2025-02-14 22:40:46
3) Добавить ещё одну функцию для  визуализации:
    показать для каждого файла File в группировке по SampleType ( Alginate, Fucoidin)
    значения FungusPercentage ( среденее по трем репликам с усиками)
    для всех  столбцов из Concentation  (0, 25%, 50%, 75%, 100%)
    учесть что каждое измерение имеет по 3 реплики - 
    измерения в каждой строке ячейки образуют реплику 
    например, (0, 3, 6, 9, 12) значения это первая реплика
    (1, 4, 7, 10, 13)  это вторая реплика
    (2, 5, 8, 11, 14)  это третья реплика
     Поэтому проводим сначала усреднение по этим тремстрокам

    показать для каждого файла File в группировке по SampleType ( Alginate, Fucoidin)
    значения FungusPercentage 
    сравнение двух групп - первая - контрольная- ячейки с водой, вторая - все другие значения 
    (столбец Concentration  - значение 0%  - вода )
    среднее по всем другим   - 25%, 50%, 75%, 100%  

    

   





 





