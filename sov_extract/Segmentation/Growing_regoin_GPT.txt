 2025-02-25 12:40:18
программа  с использованием   region_growing_fixed_seed
зависает - сама не завершается, :
были проведены тестирования для print_interval = 1000, 100, 50, 10, 1
print_interval  = 10, iteration = 870, np.sum(mask == 255) = 874
print_interval  = 1, iteration = 678, np.sum(mask == 255) = 678
что программа делает дальше - непонятно. 
seed  координата  выбирается в одной и той же области. 
визуально было выделено  примерно 80% тела с выбранной seed - точкой. 
Какие есть идеи? 

2025-02-26 15:18:28
в функции region_growing_fixed_seed  нужно организовать сбор информации о seed - точке:
1) имя файла изображения ( без пути)
2) номер споры содержащий данную точку - пока текущий последовательный по ходу выполнения данного сеанса
  ( в дальнейшем будем находить была ли эта спора уже выделена методом прямоугольников или эллипсов)
3) координаты точки
4) количество выполненных итераций 
5) RGB - значение точки
6) площадь заполненного региона в теле споры (np.sum(mask == 255))
7) порог, начиная с которого значения отбрасываются
8) база ( точка отсчета порога) либо seed - точка либо подвижная, отсчитваемая от соседней точки

при выборе seed точки желательно показывать в этом окне процесс закраски тела споры с выбранной seed - точкой ( 
  как это делалось в функции def select_shapes(image_path, mode='point', excel_file='results.xlsx'):
  окно подписывать именем обрабатываемого файла
)
результаты выделения спор сохранять накопительно в excel - файле auto_select_region согласно 1) - 8) пп. 
реализовать обход всех файлов изображений в указанном каталоге 


2025-02-27 12:56:51

При обработке одного изображения необходимо четче подвести черту под завершением выбора одной споры
и предложить выбирать следующую или завершить обработку текущуго изображения. 
Пока выведенный график останавливает процесс дальнейшего выбора спор на данном изображении. 

По завершению обработки одного избражения создавать файл overlay - всех выбранных спор и сохранять в подкаталоге 
graph текущего каталога с исходными изображениями  
( в коде будет так   - directory = "G:\My\sov\extract\Spores\original_img\grow_reg")
Файл  auto_select_region  - сохранять в directory


2025-02-27 13:45:44
окно для выбора спор  нужно показывать из оригинального изображения а не серое уменьшенное.  размер
cv2.resizeWindow(window_name, 1980, 1320)

Работа идет по десяткам спор - поэтому каждый раз заходить и кликать y - слишком утомительно
Лучше наоборот кликнуть один раз - N - чтобы завершить и по умолчанию предлагать выбор следующей споры

.npy  наверное хорошоший файл, но без excel никак не обойтись. именно его нужно сохранять в текущей директории

Файл overlay делай так же как ты делал до сих пор - на исходном изображении закрашены выбранные споры 
а не нечто черно - белое с капельками



2025-02-27 14:43:37

мы же вроде с тобой договорились что имена окон на русском у меня  показываются кракозябрами,
поэтому такого не должно быть 
 window_name = "Выбор спор"
    cv2.namedWindow(window_name, cv2.WINDOW_NORMAL)
Кроме того что об этом случае мы с тобой конкретно договорились что там должно быть имя обрабатываемого файла
без пути. 

Не работает выбор спор с нажатием Space или Enter

сегодняшний диалог мы начали вот с этого :

в функции region_growing_fixed_seed  нужно организовать сбор информации о seed - точке:
1) имя файла изображения ( без пути)
2) номер споры содержащий данную точку - пока текущий последовательный по ходу выполнения данного сеанса
  ( в дальнейшем будем находить была ли эта спора уже выделена методом прямоугольников или эллипсов)
3) координаты точки
4) количество выполненных итераций 
5) RGB - значение точки
6) площадь заполненного региона в теле споры (np.sum(mask == 255))
7) порог, начиная с которого значения отбрасываются
8) база ( точка отсчета порога) либо seed - точка либо подвижная, отсчитваемая от соседней точки

Ты через две реплики об этом уже напрочь забываешь и сохраняешь только

df = pd.DataFrame(region_data, columns=["X", "Y", "Threshold"])

Ты думаешь вроде  выделенине региона - это уже сплошной успех и больше ничего не надо.
Тут придется собирать статистику - что выделено, сколько площади, как адаптивно менять пороги,
чтобы улучшить результат.  

прошу учесть 


2025-02-27 23:04:40
необходимо расширить функционал программы выбора спор.
Можно уже убрать печать на консоль выбираемых seed - точек. 
1) файл _overlay - размещать в текущем каталоге ( с оригиналами изображений)
2) по умолчанию считаем что наличие файла _overlay означает проведенную обработку исходного файла
  при дальнейшем проходе process_images_in_directory - такой файл пропускаем
3) однако иногда возникает потребность после просмотра _overlay осуществить корректировку этого файла 
Что бы ты мог предложить для реализации такого функционала? 
Корректировка  должна  иметь возможность добавить ( выбрать) пропущенные споры, чтобы  в дальнейшем 
применить адаптивный порог  для более точного выделения области. 
Т.е добавить возможность редактирования  уже обработанного файла. 
Операции редактирования ( пока 2):
a. отмена выбранной seed - точки, влекущая освобождение области выделенной по этой точке.
 ( с сохранением всех других выборов)
b. добавление новой seed - точки и выделение новой споры. 

2025-02-27 23:27:55

режим редактирования должен быть реализован глубже, чем ты предлагаешь

отменять придется не только последнюю точку - а любую из всех выбранных 
для этого нужна функция сопоставляющая координаты "редактирующего" клика с уже выбранными точками и состыкующая
ближайшие точки  ( или ещё проще - редактирующий клик попал в спору - означает ее освобождение ) 
хотя при первом проходе отмена последней точки - очень хорошее дополнение, оно принимается с благодарностью

я вижу такой подход - как то, может правой кнопкой мыши, иметь возможность вызвать 
табличку обработанных файлов в каталоге и клик правой кнопкой на файле вызывает его загрузку для редактирования

2025-02-28 14:51:16

у тебя в последней версии пропущена функция 
def region_growing(seed)   
это по недосмотру или сознательно? 
вижу в опреаторе ты же ее испольщуешь
mask, iterations = region_growing(seed)

Ставим ее на место где и была  ?
перед циклом 
while True:
        cv2.imshow(window_name, overlay)
        key = cv2.waitKey(1) & 0xFF


2025-02-28 15:52:34

у тебя при каждой доп обработке файла добавляется к существующему суффиксу ещё один
A_best_4x_11_overlay_overlay  -  нужно проверять если суффикс overlay уже есть больше не добавлять и сохранять как есть

Также сообщение 
A_best_4x_11_overlay.png уже обработан, пропускаем. излишне - 
обработан у нас должен быть только исходный файл A_best_4x_11.png 
а overlay уже промежуточные в расчет берутся только как отметка об имевшей быть обработке 
исходного файла. 

Если в каталоге имеются все обработанные файлы ( т.е пары - оригинальный и с суффиксом)
то мы не сможем стартовать с нашей программой - она будт выдавать что все файлы обработаны.
Поэтому для старта в любой ситуации предлагаю выводить табличку 
в каталоге directory 
имеются :  список обработанных, список необработанных 

Enter ( либо Space) - взять следующий необработанный
Правая кнопка мыши - режим редактирования  - вывод номеров обработанных и приглашение выбрать номер для редактирования

везде при сохранении нового overlay проверять не является ли он уже overlay и в таком случае сохранять в тем же названием 
( т.е. с одним суффиксом)

в функции def get_next_file(unprocessed):
вот этот фрагмент

 elif key == "edit":
            print("Выберите номер обработанного файла для редактирования:")
            for idx, file in enumerate(unprocessed, start=1):
                print(f"{idx}: {file}")
            choice = int(input("Введите номер: "))
            return unprocessed[choice - 1] if 0 < choice <= len(unprocessed) else None

для редактирования   мы должны предложить  уже обрабатывавшиеся файлы из processed

2025-03-01 19:45:07
необходимо создать функцию, которая для полученных координат точки (X, Y) возвращает номер области ( споры) к которой точка
принадлежит или -1  в противном случае. 
Данные для обработки находятся в файле auto_select_region.xlsx
напоминаю структуру этого файла
columns:
Filename	Spore Number	Seed X	Seed Y	Iterations	RGB	Region Area	Threshold	Base Mode

поскольку область выделялась функцией region_growing_fixed_seed и начальная точка Seed X	Seed Y известна
также как порог Threshold то можно повторить вычисления с (X, Y) и поймать ее на вхождении. 
Чтобы не делать прямой перебор всех имеющихся спор подряд - посмотреть сначала на ближайшую из бывших seed - точек работы 
алгоритма. 

